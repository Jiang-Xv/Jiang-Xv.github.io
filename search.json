[{"title":"在 Vue3 中利用 reactive 与 ref 实现数据动态更新","url":"/2022/10/16/%E6%95%B0%E6%8D%AE%E5%8A%A8%E6%80%81%E6%9B%B4%E6%96%B0/","content":"问题描述：&lt;el-alert type=&quot;success&quot; show-icon center v-if=&quot;successStatus&quot;&gt;邮件发送成功！&lt;/el-alert&gt;&lt;el-alert type=&quot;error&quot; show-icon center v-if=&quot;errorStatus&quot;&gt;邮件发送失败！&lt;/el-alert&gt;\n使用变量 true&#x2F;false 控制 el-alert 的显示，当变量初始化为 true 时，el-alert 正常显示，但通过函数改变变量 boolean 值时，值改变，el-alert 不能正常显示。\nasync function getVerifyCode() &#123;        let params = new URLSearchParams();        params.append(&quot;email&quot;, registerForm.eMail)        await getCode(params).then(res =&gt; &#123;            switch (res.data.code) &#123;                case 0:                    successStatus.value = false                    errorStatus.value = true                    break                case 1:                    successStatus.value = true                    errorStatus.value = false                    break            &#125;        &#125;)    &#125;\n初步解决方案：使用 reactive 实现数据的动态更新\n问题2：reactive 只支持对象类型的传入，不支持布尔值类型等基本数据类型的传入\nlet successStatus = reactive(false)    WebStorm 警告：    实参类型 boolean 不可分配给形参 object    浏览器控制台警告：    value cannot be made reactive: false\n而使用\nlet successStatus = reactive(&#123;        status:false    &#125;)\n时，虽然没有警告，但也不生效。\n解决方案：使用 ref 替代 reactive\nlet successStatus = ref(false)\n","tags":["Vue3"]},{"title":"将el-selector的值传给后端","url":"/2022/10/17/%E5%B0%86el-selector%E7%9A%84%E5%80%BC%E4%BC%A0%E7%BB%99%E5%90%8E%E7%AB%AF/","content":"新知识：JavaScript find 方法find() 方法返回通过测试（函数内判断）的数组的第一个元素的值。\nfind() 方法为数组中的每个元素都调用一次函数执行：\n\n当数组中的元素在测试条件时返回 true 时, find() 返回符合条件的元素，之后的值不会再调用执行函数。\n如果没有符合条件的元素返回 undefined\n\n代码：&lt;el-select        v-model=&quot;selector.value&quot;        placeholder=&quot;请选择年级&quot;        style=&quot;width: 13vw;&quot;        ref=&quot;gradeValue&quot;        @change=&quot;getLabel($event)&quot;&gt;    &lt;el-option            v-for=&quot;item in selector.options&quot;            :key=&quot;item.value&quot;            :label=&quot;item.label&quot;            :value=&quot;item.value&quot;    &gt;&lt;/el-option&gt;&lt;/el-select&gt;\nlet gradeValue = ref(&#123;&#125;)// 获取对应 option 的值，将符合的 item 返回给 gradeValue 对象function getLabel(e) &#123;      gradeValue = selector.options.find(item =&gt; &#123;        return item.value === e      &#125;)&#125;\n\n参考链接：https://blog.csdn.net/qq_42221334/article/details/97793457","tags":["vue3"]},{"title":"数据添加 ref 但并不更新","url":"/2022/10/16/ref%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE/","content":"问题描述：数据使用了 ref 进行更新，函数中数据值有变化，但 HTML 中组件状态未更新\n相关代码：\n&lt;el-alert type=&quot;error&quot; show-icon center v-if=&quot;codeError&quot;&gt;验证码错误！&lt;/el-alert&gt;\nlet codeError = ref(false)switch (res.data.code) &#123;    case 3:        codeError = true        break&#125;\n问题解决：更新应为 .value\nswitch (res.data.code) &#123;    case 3:        codeError.value = true        break&#125;","tags":["vue3"]}]